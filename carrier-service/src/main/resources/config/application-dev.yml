logging:
  level:
    ROOT: INFO
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.ba.bvm.admin: DEBUG
    org.springframework.web: ERROR
    org.hibernate.orm.jdbc.bind: TRACE

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 50MB
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true

  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
    encoding: UTF-8

  thymeleaf:
    cache: false

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://*:5432/*?allowPublicKeyRetrieval=true&useSSL=false
    username: *
    password: *
    driver-class-name: org.postgresql.Driver
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    #properties:
    #  hibernate:
    #    jdbc:
    #      time_zone: Asia/Tokyo

server:
  port: 2900

jhipster:
  cache: # Cache configuration
    ehcache: # Ehcache configuration
      time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
      max-entries: 100 # Number of objects in each cache entry
  # CORS is disabled by default on microservices, as you should access them through a gateway.
  # If you want to enable it, please uncomment the configuration below.
  #  cors:
  #    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
  #    allowed-origins: 'http://localhost:9200/,http://localhost:4500/,http://localhost:8100,https://localhost:8100,http://localhost:9000,https://localhost:9000,http://localhost:4200,https://localhost:4200'
  #    # Enable CORS when running in GitHub Codespaces
  #    allowed-origin-patterns: 'https://*.githubpreview.dev'
  #    allowed-methods: '*'
  #    allowed-headers: '*'
  #    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
  #    allow-credentials: true
  #    max-age: 1800
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000

next:
  telemetry:
    jaeger-url: http://localhost:4317
  aws:
    access-key: "******"
    secret-key: "******"
    expired-time: 3600000
    region: "******"
    bucket-name: "******"
  data-common:
    domainGateway: http://localhost:9400
    mockData: false
  auth-white:
    apis:
      - "/auth/login"
      - "/auth/client"
      - "/auth/refresh"
      - "/actuator/**"
      - "/v3/api-docs"
      - "/metrics"
      - "/api/v1/delivery-ability-item/*/tracking"
      - "/api/v1/delivery-ability-item/*/operation-tracking"
      - "/api/v1/validate_semi_dynamic_info"
      - "/api/v1/item/status/**"
      - "/api/v1/locations"
      - "/api/v1/item/time/**"
      - "/api/v1/item/*/emergency"
  mail:
    host: "******"
    port: 587
    password: "******"
    username: "AKIAWOAVSJ4PBPG3UPGA"
    protocol: "smtp"
    auth: "true"
    startTLS: "true"
    from: "******"
  url:
    verify-token: https://your-domain/api-endpoint
    domain-transaction: https://your-domain/api-endpoint
    domain-gateway: https://your-domain/api-endpoint
    ttmi: https://your-domain/api-endpoint